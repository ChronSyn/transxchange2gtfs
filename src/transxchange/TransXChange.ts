import {ATCOCode} from "../reference/NaPTAN";
import {LocalDate} from "js-joda";

/**
 * Trimmed down version of the JSON generated by the XML parser
 */
export interface TransXChange {
  StopPoints: StopPoint[],
  JourneySections: JourneyPatternSections,
  Operators: Operators,
  Services: Service[]
}

/**
 * JourneyPatternSections indexed by id
 */
export type JourneyPatternSections = Record<string, TimingLink[]>;

/**
 * AnnotatedStopPointRef from TransXChange feed
 */
export interface StopPoint {
  StopPointRef: ATCOCode,
  CommonName: string,
  LocalityName: string,
  LocalityQualifier: string
}

/**
 * JourneyPatternTimingLink
 */
export interface TimingLink {
  From: JourneyStop,
  To: JourneyStop,
  RunTime: Duration;
}

/**
 * From/To field inside a JourneyPatternTimingLink
 */
export interface JourneyStop {
  Activity: StopActivity,
  StopPointRef: ATCOCode,
  WaitTime?: Duration
}

/**
 * Types of Activity at a From/To location
 */
export enum StopActivity {
  PickUp = "pickUp",
  PickUpAndSetDown = "pickUpAndSetDown",
  SetDown = "setDown",
}

/**
 * String representation of a duration, e.g. PT5M
 */
export type Duration = string;

/**
 * Operators indexed by ID
 */
export type Operators = Record<OperatorID, Operator>;

/**
 * Operator ID e.g. OId_MEGA (not to be confused with OperatorCode)
 */
export type OperatorID = string;

/**
 * Operator
 */
export interface Operator {
  OperatorCode: string,
  OperatorShortName: string,
  OperatorNameOnLicence: string | undefined
}

/**
 * Service
 */
export interface Service {
  ServiceCode: string,
  Lines: Lines,
  OperatingPeriod: OperatingPeriod,
  RegisteredOperatorRef: OperatorID,
  Description: string,
  Mode: Mode
}

/**
 * Lines indexed by line ID
 */
export type Lines = Record<string, string>;

/**
 * Period of operation
 */
export interface OperatingPeriod {
  StartDate: LocalDate,
  EndDate: LocalDate
}

/**
 * Transport mode
 */
export enum Mode {
  Air = "air",
  Bus = "bus",
  Coach = "coach",
  Underground = "underground",
  Ferry = "ferry",
  Train = "train",
  Tram = "tram"
}